# Generated by Django 4.2.16 on 2024-09-17 10:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('organization', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desks', models.PositiveIntegerField()),
                ('size', models.CharField(max_length=50)),
                ('private_offices', models.PositiveIntegerField()),
                ('floors', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('opening_date', models.DateField()),
                ('description', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='workspace_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=255)),
                ('unit_number', models.CharField(max_length=10)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('area', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OperationalTimings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('is_saturday_open', models.BooleanField(default=False)),
                ('is_sunday_open', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WorkspaceForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.capacity')),
                ('description', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.description')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.location')),
                ('operational_timings', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.operationaltimings')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrivateOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desks', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration', models.CharField(default='month', max_length=10)),
                ('similar', models.CharField(blank=True, max_length=100, null=True)),
                ('workspace_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.workspaceform')),
            ],
        ),
        migrations.CreateModel(
            name='Mentorship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=50)),
                ('mentors', models.CharField(max_length=255)),
                ('workspace_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.workspaceform')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('capacity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available', models.BooleanField(default=True)),
                ('workspace_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.workspaceform')),
            ],
        ),
        migrations.CreateModel(
            name='FloorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exec_rooms', models.PositiveIntegerField()),
                ('meeting_rooms', models.PositiveIntegerField()),
                ('desks', models.PositiveIntegerField()),
                ('duration', models.CharField(default='month', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('similar', models.CharField(blank=True, max_length=100, null=True)),
                ('workspace_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.workspaceform')),
            ],
        ),
        migrations.CreateModel(
            name='Desk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.CharField(choices=[('day', 'Day'), ('month', 'Month'), ('year', 'Year')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('hot_desks', 'Hot Desks'), ('dedicated_desks', 'Dedicated Desks')], max_length=50)),
                ('workspace_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.workspaceform')),
            ],
        ),
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=50)),
                ('workspace_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coworkingspace.workspaceform')),
            ],
        ),
    ]
